package com.rapidweb2.web.server;
/**
 * 项目名称：RapidWeb2快速开发平台基础框架
 * 版权申明：RapidWeb2项目组，未经许可不得在任何软件中以任何形式使用全部或部分代码，不得更改本项目的代码。
 * 文件名称：JettyWebService.java
 * 创建时间：2010-12-1-下午11:21:34
 * 创建用户：chis(chis123@qq.com)
 * 文件描述：
 * 修改记录：
 *   
 */


import org.mortbay.jetty.Connector;
import org.mortbay.jetty.Server;
import org.mortbay.jetty.bio.SocketConnector;
import org.mortbay.jetty.handler.ContextHandlerCollection;
import org.mortbay.jetty.webapp.WebAppContext;
import org.mortbay.thread.QueuedThreadPool;
import org.mortbay.util.URIUtil;

import com.rapidweb2.common.util.LogUtil;


/**
 * 使用JETTY嵌入式,便于开发时候调试使用
 * 
 * @author chis(chis123@qq.com)
 * 
 */
public class JettyWebService implements IWebService {

	private Server	server		= null;		// JETTY服务器
	private String	hostAddress	= "0.0.0.0";	// 侦听地址
	private int		tcpPort		= 80;			// 侦听端口
	private String	contextPath	= "WebContent";		// 内容目录

	public int getMaxThreads() {
		return maxThreads;
	}

	public void setMaxThreads(int maxThreads) {
		this.maxThreads = maxThreads;
	}
	private int	maxThreads	= 300;	// 最大进程数目

	public String getHostAddress() {
		return hostAddress;
	}

	public void setHostAddress(String hostAddress) {
		this.hostAddress = hostAddress;
	}

	public int getTcpPort() {
		return tcpPort;
	}

	public void setTcpPort(int tcpPort) {
		this.tcpPort = tcpPort;
	}

	public Server getServer() {
		return server;
	}

	public void setServer(Server server) {
		this.server = server;
	}

	public String getContextPath() {
		return contextPath;
	}

	public void setContextPath(String contextPath) {
		this.contextPath = contextPath;
	}

	/*
	 * (non-Javadoc)
	 * @see com.rapidweb2.server.web.IWebService#startup()
	 */
	@Override
	public void startup() {
		if (server == null) createServer();
		try {
			server.start();
			server.join();
		} catch (Exception e) {
			// Asserts.unchecked(e);
			e.printStackTrace();
		}
	}

	/**
	 * 创建一个新的JETTY服务器
	 * 
	 * @throws InterruptedException
	 */
	private void createServer() {

		server = new Server();

		ContextHandlerCollection contexts = new ContextHandlerCollection();
		server.setHandler(contexts);

		SocketConnector connector = new SocketConnector();
		connector.setHost(this.getHostAddress());
		connector.setPort(this.getTcpPort());
		server.setConnectors(new Connector[] { connector });

		// 建立基础的WEB应用，其中使用标准的WEB.XML来定义SERVLET和FILTER等
		WebAppContext webapp = new WebAppContext();
		webapp.setResourceBase(contextPath);
		webapp.setContextPath(URIUtil.SLASH);
		webapp.setDescriptor(contextPath + "/WEB-INF/web.xml");
		webapp.setParentLoaderPriority(true);
		contexts.addHandler(webapp);
		LogUtil.debug(JettyWebService.class, String.format("启动的ContentPath=%s,WEB.XML=%s/WEB-INF/web.xml", contextPath, contextPath));

		// 设置最大的线程池的大小 = 300
		QueuedThreadPool threadPool = new QueuedThreadPool(this.getMaxThreads());

		server.setThreadPool(threadPool);
		server.setStopAtShutdown(true);

	}

	/*
	 * (non-Javadoc)
	 * @see com.rapidweb2.server.web.IWebService#stop()
	 */
	@Override
	public void stop() {
		if (server != null && !server.isStopped() && !server.isStopping()) try {
			server.stop();
		} catch (Exception e) {
			// Asserts.unchecked(e,"服务器停止出错：%s",e.getMessage());
			e.printStackTrace();
		}
	}

}
