package com.rapidweb2.web;
/**
 * 项目名称：善行信息电子商务平台
 * 版权申明：善行信息公司，未经许可不得在任何软件中以任何形式使用全部或部分代码，不得更改本项目的代码。
 * 文件名称：CoreFilter
 * 创建时间：2011-1-6-下午12:07:29
 * 创建用户：hunting
 * 文件描述：
 * 修改记录：
 *   
 */


import java.io.IOException;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;

import com.rapidweb2.common.util.StringUtil;


/**
 * 管理员Filter
 * 
 * @author hunting
 * 
 */
public class CoreFilter implements Filter {

	private FilterConfig	filterConfig;

	@Override
	public void destroy() {

	}

	@Override
	public void doFilter(ServletRequest req1, ServletResponse res1, FilterChain chain) throws IOException, ServletException {

		HttpServletRequest req = (HttpServletRequest) req1;
		// HttpServletResponse res = (HttpServletResponse) res1;
		// HttpSession session = req.getSession();
		String reqURI = req.getRequestURI();

		// 排除不需要进行过滤的目录
		String[] expaths = filterConfig.getInitParameter("exclude-paths").split(",");
		for (String p : expaths)
			if (reqURI.startsWith(req.getContextPath() + p.trim())) {
				chain.doFilter(req1, res1);
				return;
			}

		// 禁止访问目录
		String probibitPaths = filterConfig.getInitParameter("prohibit-paths");
		if (!StringUtil.isBlank(probibitPaths)) {
			String[] prohibit = filterConfig.getInitParameter("prohibit-paths").split(",");
			if (prohibit != null)
				for (String p : prohibit)
					if (reqURI.startsWith(req.getContextPath() + p.trim())) { return; }
		}
		
		chain.doFilter(req1, res1);
		return;
	}

	@Override
	public void init(FilterConfig filterConfig) throws ServletException {
		this.filterConfig = filterConfig;
	}

}
