/**
 * 
 */
package com.rapidweb2.common.exception;

import com.rapidweb2.db.DBException;

/**
 * 异常工具类
 * @author chis(chis123@qq.com)
 *
 */
public final class Exceptions {
	/**
	 * 抛出不需要强制处理的异常，通常用来作为最外部的异常处理用 
	 * @return
	 */
	public static RuntimeException unchecked(  ){
		return new RuntimeException();
	}
	/**
	 * 抛出不需要强制处理的异常，通常用来作为最外部的异常处理用 
	 * @param e
	 * @return
	 */
	public static RuntimeException unchecked( Throwable e ){
		return new RuntimeException(e);
	}
	/**
	 * 抛出不需要强制处理的异常，通常用来作为最外部的异常处理用 
	 * @param e
	 * @param msg
	 * @param args
	 * @return
	 */
	public static RuntimeException unchecked( Throwable e,String msg,Object...args ){
		return new RuntimeException(String.format(msg,args),e);
	}
	/**
	 * 抛出不需要强制处理的异常，通常用来作为最外部的异常处理用
	 * @param msg
	 * @param args
	 * @return
	 */
	public static RuntimeException unchecked( String msg,Object...args ){
		return new RuntimeException( String.format(msg, args) );
	}
	/**
	 * 抛出非法参数的异常
	 * @param e
	 * @param msg
	 * @param args
	 * @return
	 */
	public static IllegalArgumentException illegalArgument( Throwable e,String msg,Object...args ){
		return new IllegalArgumentException( String.format(msg, args),e );
	}
	
	/**
	 * 抛出非法参数的异常
	 * @param msg
	 * @param args
	 * @return
	 */
	public static IllegalArgumentException illegalArgument( String msg,Object...args ){
		return new IllegalArgumentException( String.format(msg, args) );
	}

	/**
	 * 抛出不需要强制处理的异常，通常用来作为最外部的异常处理用 
	 * @return
	 */
	public static WebException web(  ){
		return new WebException();
	}
	/**
	 * 抛出不需要强制处理的异常，通常用来作为最外部的异常处理用 
	 * @param e
	 * @return
	 */
	public static WebException web( Throwable e ){
		return new WebException(e);
	}
	/**
	 * 抛出不需要强制处理的异常，通常用来作为最外部的异常处理用 
	 * @param e
	 * @param msg
	 * @param args
	 * @return
	 */
	public static WebException web( Throwable e,String msg,Object...args ){
		return new WebException(e,msg,args);
	}
	/**
	 * 抛出不需要强制处理的异常，通常用来作为最外部的异常处理用
	 * @param msg
	 * @param args
	 * @return
	 */
	public static WebException web( String msg,Object...args ){
		return new WebException(msg,args);
	}

	/**
	 * 抛出不需要强制处理的数据库处理异常 
	 * @param e
	 * @param msg
	 * @param args
	 * @return
	 */
	public static DBException db( Throwable e,String msg,Object...args ){
		return new DBException(e,msg,args);
	}
	/**
	 * 抛出不需要强制处理的数据库处理异常 
	 * @param msg
	 * @param args
	 * @return
	 */
	public static DBException db( String msg,Object...args ){
		return new DBException(msg,args);
	}
	
}
