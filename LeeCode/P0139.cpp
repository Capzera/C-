/*
问题描述：P0139
给你一个字符串 s 和一个字符串列表 wordDict 作为字典。请你判断是否可以利用字典中出现的单词拼接出 s 。
注意：不要求字典中出现的单词全部都使用，并且字典中的单词可以重复使用。
示例 1：
输入: s = "leetcode", wordDict = ["leet", "code"]
输出: true
解释: 返回 true 因为 "leetcode" 可以由 "leet" 和 "code" 拼接成。
示例 2：
输入: s = "applepenapple", wordDict = ["apple", "pen"]
输出: true
解释: 返回 true 因为 "applepenapple" 可以由 "apple" "pen" "apple" 拼接成。
?    注意，你可以重复使用字典中的单词。
示例 3：
输入: s = "catsandog", wordDict = ["cats", "dog", "sand", "and", "cat"]
输出: false
提示：
1 <= s.length <= 300
1 <= wordDict.length <= 1000
1 <= wordDict[i].length <= 20
s 和 wordDict[i] 仅有小写英文字母组成
wordDict 中的所有字符串 互不相同
*/
class Solution {
public:
    bool wordBreak(string s, vector<string>& wordDict) {
        unordered_map<string,int> um;
        int i,j,n=s.size();
        vector<bool> dp(n+1);
        dp[0]=1;
        for(i=0;i<wordDict.size();i++)um[wordDict[i]]++;
        for(i=1;i<=n;i++)
        {
            for(j=0;j<i;j++)
            {
                if (dp[j]&&um.find(s.substr(j,i-j))!=um.end())
                {
                    dp[i]=1;
                    break;
                }
            }
        }
        return dp[n];
    }
};